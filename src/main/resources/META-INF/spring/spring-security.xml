<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd"
	default-lazy-init="true">

	<http security="none" pattern="/resources/**" />
	<http security="none" pattern="/**/*.jsp" />
	<http security="none" pattern="/sys/login.do" />

	<http auto-config='true' access-decision-manager-ref="accessDecisionManager" access-denied-page="/login.jsp"
		use-expressions="true">
		<logout logout-url="/logout.do" invalidate-session="true"
			logout-success-url="/login.jsp" />


		<form-login login-page="/login.jsp" authentication-failure-url="/login.jsp?error=1"/>
		<!--<form-login login-page="/login.jsp" authentication-failure-url="/login.jsp?error=1"-->
			<!--login-processing-url="/j_security_check.do" password-parameter="j_password" always-use-default-target="false"-->
			<!--default-target-url="/login.do"-->
			<!--username-parameter="j_username" />-->


		<intercept-url pattern="/**/*.do" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/**/*.htm" access="hasRole('ROLE_ADMIN')" />

		<session-management session-fixation-protection="changeSessionId">
			<concurrency-control max-sessions="1"
				expired-url="/access/sameLogin.htmls" />
		</session-management>

		<remember-me key="morder#FD637E6D9C0F1A5A67082AF56CE32485" user-service-ref="userService" remember-me-parameter="remember-me" />
	</http>

	<!-- 启用表达式 为了后面的投票器做准备 -->
	<beans:bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"
		id="expressionHandler" />
	<beans:bean
		class="org.springframework.security.web.access.expression.WebExpressionVoter"
		id="expressionVoter">
		<beans:property name="expressionHandler" ref="expressionHandler" />
	</beans:bean>

	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />
	<beans:bean id="authorizationListener"
		class="org.springframework.security.access.event.LoggerListener" />

	<beans:bean id="userService" class="com.morder.security.UserDetailsService" />
	<!-- 认证管理器，使用自定义的UserDetailsService，并对密码采用md5加密 -->
	<authentication-manager alias="myAuthenticationManager">
		<authentication-provider user-service-ref="userService">
			<password-encoder hash="md5" />
		</authentication-provider>
	</authentication-manager>







	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:ref bean="expressionVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>


	<!-- CSRF protection. Here we only include the CsrfFilter instead of all
        of Spring Security. See http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#csrf
        for more information on Spring Security's CSRF protection -->
	<beans:bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
		<beans:constructor-arg>
			<beans:bean
					class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository" />
		</beans:constructor-arg>
	</beans:bean>
	<!-- Provides automatic CSRF token inclusion when using Spring MVC Form
        tags or Thymeleaf. -->
	<beans:bean id="requestDataValueProcessor"
				class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor" />
</beans:beans>